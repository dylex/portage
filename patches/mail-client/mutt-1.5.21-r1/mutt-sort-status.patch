diff -r 1a4c43138685 -r 1da47dc5f10c init.h
--- a/init.h	Fri Oct 01 07:14:24 2010 -0700
+++ b/init.h	Sun Aug 01 19:04:03 2010 -0400
@@ -3401,10 +3401,11 @@
   { "size",		SORT_SIZE },
   { "threads",		SORT_THREADS },
   { "to",		SORT_TO },
   { "score",		SORT_SCORE },
   { "spam",		SORT_SPAM },
+  { "status",		SORT_STATUS },
   { NULL,               0 }
 };
 
 /* same as SortMethods, but with "threads" replaced by "date" */
 
@@ -3420,10 +3421,11 @@
 					 * isn't possible.
 					 */
   { "to",		SORT_TO },
   { "score",		SORT_SCORE },
   { "spam",		SORT_SPAM },
+  { "status",		SORT_STATUS },
   { NULL,               0 }
 };
 
 
 const struct mapping_t SortBrowserMethods[] = {
diff -r 1a4c43138685 -r 1da47dc5f10c sort.c
--- a/sort.c	Fri Oct 01 07:14:24 2010 -0700
+++ b/sort.c	Sun Aug 01 19:04:03 2010 -0400
@@ -208,10 +208,24 @@
   }
 
   return (SORTCODE(result));
 }
 
+static int compare_status (const void *a, const void *b)
+{
+  HEADER **pa = (HEADER **) a;
+  HEADER **pb = (HEADER **) b;
+  int result = 0;
+  if (!result) result = (*pb)->deleted - (*pa)->deleted;
+  if (!result) result = (*pb)->old - (*pa)->old;
+  if (!result) result = (*pb)->read - (*pa)->read;
+  if (!result) result = (*pa)->flagged - (*pb)->flagged;
+  if (!result) result = (*pb)->replied - (*pa)->replied;
+  AUXSORT(result,a,b);
+  return (SORTCODE(result));
+}
+
 sort_t *mutt_get_sort_func (int method)
 {
   switch (method & SORT_MASK)
   {
     case SORT_RECEIVED:
@@ -230,10 +244,12 @@
       return (compare_to);
     case SORT_SCORE:
       return (compare_score);
     case SORT_SPAM:
       return (compare_spam);
+    case SORT_STATUS:
+      return (compare_status);
     default:
       return (NULL);
   }
   /* not reached */
 }
diff -r 1a4c43138685 -r 1da47dc5f10c sort.h
--- a/sort.h	Fri Oct 01 07:14:24 2010 -0700
+++ b/sort.h	Sun Aug 01 19:04:03 2010 -0400
@@ -29,10 +29,11 @@
 #define SORT_ALIAS	10
 #define SORT_ADDRESS	11
 #define SORT_KEYID	12
 #define SORT_TRUST	13
 #define SORT_SPAM	14
+#define SORT_STATUS	15
 /* dgc: Sort & SortAux are shorts, so I'm bumping these bitflags up from
  * bits 4 & 5 to bits 8 & 9 to make room for more sort keys in the future. */
 #define SORT_MASK	0xff
 #define SORT_REVERSE	(1<<8)
 #define SORT_LAST	(1<<9)
