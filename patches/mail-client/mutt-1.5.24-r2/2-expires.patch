diff -r c55918f5d06f OPS
--- a/OPS	Sun Aug 01 19:04:03 2010 -0400
+++ b/OPS	Fri Jan 22 15:47:40 2016 -0500
@@ -61,6 +61,7 @@
 OP_DISPLAY_ADDRESS "display full address of sender"
 OP_DISPLAY_HEADERS "display message and toggle header weeding"
 OP_DISPLAY_MESSAGE "display a message"
+OP_EDIT_EXPIRES "edit the message EXPIRES date"
 OP_EDIT_MESSAGE "edit the raw message"
 OP_EDITOR_BACKSPACE "delete the char in front of the cursor"
 OP_EDITOR_BACKWARD_CHAR "move the cursor one character to the left"
diff -r c55918f5d06f commands.c
--- a/commands.c	Sun Aug 01 19:04:03 2010 -0400
+++ b/commands.c	Fri Jan 22 15:47:40 2016 -0500
@@ -533,9 +533,9 @@
   int method = Sort; /* save the current method in case of abort */
 
   switch (mutt_multi_choice (reverse ?
-			     _("Rev-Sort (d)ate/(f)rm/(r)ecv/(s)ubj/t(o)/(t)hread/(u)nsort/si(z)e/s(c)ore/s(p)am?: ") :
-			     _("Sort (d)ate/(f)rm/(r)ecv/(s)ubj/t(o)/(t)hread/(u)nsort/si(z)e/s(c)ore/s(p)am?: "),
-			     _("dfrsotuzcp")))
+			     _("Rev-Sort (d)ate/(f)rm/(r)ecv/(s)ubj/t(o)/(t)hread/(u)nsort/si(z)e/s(c)ore/s(p)am/(e)xpire?: ") :
+			     _("Sort (d)ate/(f)rm/(r)ecv/(s)ubj/t(o)/(t)hread/(u)nsort/si(z)e/s(c)ore/s(p)am/(e)xpire?: "),
+			     _("dfrsotuzcpe")))
   {
   case -1: /* abort - don't resort */
     return -1;
@@ -579,6 +579,10 @@
   case 10: /* s(p)am */
     Sort = SORT_SPAM;
     break;
+
+  case 11: /* (e)xpires */
+    Sort = SORT_EXPIRES;
+    break;
   }
   if (reverse)
     Sort |= SORT_REVERSE;
@@ -975,6 +979,66 @@
   }
 }
 
+static void _mutt_set_expires (HEADER *h, const char *exp, time_t expt)
+{
+	if (!h)
+		return;
+	if (!h->env->expires && !exp)
+		return;
+	if (h->env->expires && exp && !mutt_strcmp (h->env->expires, exp))
+		return;
+	if (h->env->expires)
+		FREE(&h->env->expires);
+	h->env->expires = safe_strdup(exp);
+	h->expires = expt;
+	h->changed = h->env->expires_changed = 1;
+}
+
+void mutt_edit_expires (HEADER *h)
+{
+	char buf[LONG_STRING] = "";
+	time_t exp;
+
+	if (h && h->env->expires)
+		strncpy(buf, h->env->expires, LONG_STRING);
+
+	if (mutt_get_field("Expires: ", buf, sizeof(buf), 0))
+		return;
+	
+	if (*buf)
+	{
+		char cmd[LONG_STRING];
+		FILE *out;
+		pid_t pid;
+
+		snprintf(cmd, sizeof(cmd), "date -Rd '%s'", buf);
+		if ((pid = mutt_create_filter(cmd, NULL, &out, NULL)) > 0)
+		{
+			size_t n = fread(buf, 1, sizeof(buf)-1, out);
+			safe_fclose(&out);
+			while (n && (buf[n-1] == '\n' || buf[n-1] == '\r'))
+				n--;
+			buf[n] = 0;
+
+			if (mutt_wait_filter(pid))
+			{
+				mutt_error(_("Invalid date format"));
+				return;
+			}
+		}
+	}
+
+	exp = *buf ? mutt_parse_date(buf, NULL) : 0;
+	if (h)
+		_mutt_set_expires(h, *buf ? buf : 0, exp);
+	else
+	{
+		int i;
+		for (i = 0; i < Context->vcount; i++)
+			if (Context->hdrs[Context->v2r[i]]->tagged)
+				_mutt_set_expires(Context->hdrs[Context->v2r[i]], *buf ? buf : 0, exp);
+	}
+}
 
 static int _mutt_check_traditional_pgp (HEADER *h, int *redraw)
 {
diff -r c55918f5d06f copy.c
--- a/copy.c	Sun Aug 01 19:04:03 2010 -0400
+++ b/copy.c	Fri Jan 22 15:47:40 2016 -0500
@@ -102,6 +102,9 @@
 	    (ascii_strncasecmp ("Content-Length:", buf, 15) == 0 ||
 	     ascii_strncasecmp ("Lines:", buf, 6) == 0))
 	  continue;
+	if ((flags & CH_UPDATE_EXPIRES) &&
+	    ascii_strncasecmp ("Expires:", buf, 8) == 0)
+	  continue;
 	if ((flags & CH_UPDATE_REFS) &&
 	    ascii_strncasecmp ("References:", buf, 11) == 0)
 	  continue;
@@ -208,6 +211,9 @@
 	     ascii_strncasecmp ("type:", buf + 8, 5) == 0)) ||
 	   ascii_strncasecmp ("mime-version:", buf, 13) == 0))
 	continue;
+      if ((flags & CH_UPDATE_EXPIRES) &&
+	  ascii_strncasecmp ("Expires:", buf, 8) == 0)
+	continue;
       if ((flags & CH_UPDATE_REFS) &&
 	  ascii_strncasecmp ("References:", buf, 11) == 0)
 	continue;
@@ -346,7 +352,8 @@
 
   if (h->env)
     flags |= (h->env->irt_changed ? CH_UPDATE_IRT : 0)
-      | (h->env->refs_changed ? CH_UPDATE_REFS : 0);
+      | (h->env->refs_changed ? CH_UPDATE_REFS : 0)
+      | (h->env->expires_changed ? CH_UPDATE_EXPIRES : 0);
   
   if (mutt_copy_hdr (in, out, h->offset, h->content->offset, flags, prefix) == -1)
     return -1;
@@ -413,6 +420,13 @@
       fprintf (out, "Lines: %d\n", h->lines);
   }
 
+  if (flags & CH_UPDATE_EXPIRES && h->env->expires)
+  {
+    fputs ("Expires: ", out);
+    fputs (h->env->expires, out);
+    fputc ('\n', out);
+  }
+
   if ((flags & CH_NONEWLINE) == 0)
   {
     if (flags & CH_PREFIX)
diff -r c55918f5d06f copy.h
--- a/copy.h	Sun Aug 01 19:04:03 2010 -0400
+++ b/copy.h	Fri Jan 22 15:47:40 2016 -0500
@@ -50,9 +50,10 @@
 #define CH_WEED_DELIVERED (1<<13) /* weed eventual Delivered-To headers */
 #define CH_FORCE_FROM     (1<<14) /* give CH_FROM precedence over CH_WEED? */
 #define CH_NOQFROM        (1<<15) /* ignore ">From " line */
-#define CH_UPDATE_IRT     (1<<16) /* update In-Reply-To: */
-#define CH_UPDATE_REFS    (1<<17) /* update References: */
-#define CH_DISPLAY        (1<<18) /* display result to user */
+#define CH_UPDATE_EXPIRES (1<<16) /* update Expires: */
+#define CH_UPDATE_IRT     (1<<17) /* update In-Reply-To: */
+#define CH_UPDATE_REFS    (1<<18) /* update References: */
+#define CH_DISPLAY        (1<<19) /* display result to user */
 
 
 int mutt_copy_hdr (FILE *, FILE *, LOFF_T, LOFF_T, int, const char *);
diff -r c55918f5d06f curs_main.c
--- a/curs_main.c	Sun Aug 01 19:04:03 2010 -0400
+++ b/curs_main.c	Fri Jan 22 15:47:40 2016 -0500
@@ -2246,6 +2246,21 @@
 
 	break;
 
+      case OP_EDIT_EXPIRES:
+
+	CHECK_MSGCOUNT;
+        CHECK_VISIBLE;
+	CHECK_READONLY;
+	CHECK_ACL(M_ACL_WRITE, _("edit expiration"));
+	mutt_edit_expires(tag ? NULL : CURHDR);
+	if (menu->menu == MENU_PAGER)
+	{
+	  op = OP_DISPLAY_MESSAGE;
+	  continue;
+	}
+
+	break;
+
       case OP_FORWARD_MESSAGE:
 
 	CHECK_MSGCOUNT;
diff -r c55918f5d06f functions.h
--- a/functions.h	Sun Aug 01 19:04:03 2010 -0400
+++ b/functions.h	Fri Jan 22 15:47:40 2016 -0500
@@ -104,6 +104,7 @@
   { "delete-subthread",		OP_DELETE_SUBTHREAD,		"\033d" },
   { "edit",			OP_EDIT_MESSAGE,		"e" },
   { "edit-type",		OP_EDIT_TYPE,			"\005" },
+  { "edit-expiration",		OP_EDIT_EXPIRES,		"E" },
   { "forward-message",		OP_FORWARD_MESSAGE,		"f" },
 #ifdef USE_NNTP
   { "forward-to-group",		OP_FORWARD_TO_GROUP,		"\033F" },
diff -r c55918f5d06f hcache.c
--- a/hcache.c	Sun Aug 01 19:04:03 2010 -0400
+++ b/hcache.c	Fri Jan 22 15:47:40 2016 -0500
@@ -439,6 +439,7 @@
   d = dump_char(e->message_id, d, off, 0);
   d = dump_char(e->supersedes, d, off, 0);
   d = dump_char(e->date, d, off, 0);
+  d = dump_char(e->expires, d, off, 0);
   d = dump_char(e->x_label, d, off, convert);
 
   d = dump_buffer(e->spam, d, off, convert);
@@ -476,6 +477,7 @@
   restore_char(&e->message_id, d, off, 0);
   restore_char(&e->supersedes, d, off, 0);
   restore_char(&e->date, d, off, 0);
+  restore_char(&e->expires, d, off, 0);
   restore_char(&e->x_label, d, off, convert);
 
   restore_buffer(&e->spam, d, off, convert);
diff -r c55918f5d06f hdrline.c
--- a/hdrline.c	Sun Aug 01 19:04:03 2010 -0400
+++ b/hdrline.c	Fri Jan 22 15:47:40 2016 -0500
@@ -821,7 +821,9 @@
     
       ch = ' ';
 
-      if (WithCrypto && hdr->security & GOODSIGN)
+      if (hdr->expires && hdr->expires < time(NULL))
+	      ch = 'E';
+      else if (WithCrypto && hdr->security & GOODSIGN)
         ch = 'S';
       else if (WithCrypto && hdr->security & ENCRYPT)
       	ch = 'P';
diff -r c55918f5d06f init.h
--- a/init.h	Sun Aug 01 19:04:03 2010 -0400
+++ b/init.h	Fri Jan 22 15:47:40 2016 -0500
@@ -3782,6 +3782,7 @@
   { "to",		SORT_TO },
   { "score",		SORT_SCORE },
   { "spam",		SORT_SPAM },
+  { "expiration",	SORT_EXPIRES },
   { "status",		SORT_STATUS },
   { NULL,               0 }
 };
@@ -3802,6 +3803,7 @@
   { "to",		SORT_TO },
   { "score",		SORT_SCORE },
   { "spam",		SORT_SPAM },
+  { "expiration",	SORT_EXPIRES },
   { "status",		SORT_STATUS },
   { NULL,               0 }
 };
diff -r c55918f5d06f mbox.c
--- a/mbox.c	Sun Aug 01 19:04:03 2010 -0400
+++ b/mbox.c	Fri Jan 22 15:47:40 2016 -0500
@@ -484,6 +484,7 @@
   {
     if (mutt_strcmp (e1->message_id, e2->message_id) ||
 	mutt_strcmp (e1->subject, e2->subject) ||
+	mutt_strcmp (e1->expires, e2->expires) ||
 	!strict_cmp_lists (e1->references, e2->references) ||
 	!strict_addrcmp (e1->from, e2->from) ||
 	!strict_addrcmp (e1->sender, e2->sender) ||
diff -r c55918f5d06f mh.c
--- a/mh.c	Sun Aug 01 19:04:03 2010 -0400
+++ b/mh.c	Fri Jan 22 15:47:40 2016 -0500
@@ -1613,7 +1613,7 @@
   HEADER *h = ctx->hdrs[msgno];
 
   if (h->attach_del || 
-      (h->env && (h->env->refs_changed || h->env->irt_changed)))
+      (h->env && (h->env->expires_changed || h->env->refs_changed || h->env->irt_changed)))
     if (mh_rewrite_message (ctx, msgno) != 0)
       return -1;
 
@@ -1625,7 +1625,7 @@
   HEADER *h = ctx->hdrs[msgno];
 
   if (h->attach_del || 
-      (h->env && (h->env->refs_changed || h->env->irt_changed)))
+      (h->env && (h->env->expires_changed || h->env->refs_changed || h->env->irt_changed)))
   {
     /* when doing attachment deletion/rethreading, fall back to the MH case. */
     if (mh_rewrite_message (ctx, msgno) != 0)
diff -r c55918f5d06f mutt.h
--- a/mutt.h	Sun Aug 01 19:04:03 2010 -0400
+++ b/mutt.h	Fri Jan 22 15:47:40 2016 -0500
@@ -638,6 +638,7 @@
   char *message_id;
   char *supersedes;
   char *date;
+  char *expires;
   char *x_label;
   char *organization;
 #ifdef USE_NNTP
@@ -651,6 +652,7 @@
   LIST *in_reply_to;		/* in-reply-to header content */
   LIST *userhdrs;		/* user defined headers */
 
+  unsigned int expires_changed : 1;
   unsigned int irt_changed : 1; /* In-Reply-To changed to link/break threads */
   unsigned int refs_changed : 1; /* References changed to break thread */
 } ENVELOPE;
@@ -771,7 +773,6 @@
   unsigned int attach_del : 1; 		/* has an attachment marked for deletion */
   unsigned int old : 1;
   unsigned int read : 1;
-  unsigned int expired : 1; 		/* already expired? */
   unsigned int superseded : 1; 		/* got superseded? */
   unsigned int replied : 1;
   unsigned int subject_changed : 1; 	/* used for threading */
@@ -807,6 +808,7 @@
 
   time_t date_sent;     	/* time when the message was sent (UTC) */
   time_t received;      	/* time when the message was placed in the mailbox */
+  time_t expires;
   LOFF_T offset;          	/* where in the stream does this message begin? */
   int lines;			/* how many lines in the body of this message? */
   int index;			/* the absolute (unsorted) message number */
diff -r c55918f5d06f muttlib.c
--- a/muttlib.c	Sun Aug 01 19:04:03 2010 -0400
+++ b/muttlib.c	Fri Jan 22 15:47:40 2016 -0500
@@ -714,6 +714,7 @@
   FREE (&(*p)->message_id);
   FREE (&(*p)->supersedes);
   FREE (&(*p)->date);
+  FREE (&(*p)->expires);
   FREE (&(*p)->x_label);
   FREE (&(*p)->organization);
 #ifdef USE_NNTP
@@ -750,6 +751,10 @@
   MOVE_ELEM(message_id);
   MOVE_ELEM(supersedes);
   MOVE_ELEM(date);
+  if (!base->expires_changed)
+  {
+    MOVE_ELEM(expires);
+  }
   MOVE_ELEM(x_label);
   if (!base->refs_changed)
   {
diff -r c55918f5d06f parse.c
--- a/parse.c	Sun Aug 01 19:04:03 2010 -0400
+++ b/parse.c	Fri Jan 22 15:47:40 2016 -0500
@@ -1061,9 +1061,12 @@
     break;
     
     case 'e':
-    if (!ascii_strcasecmp ("xpires", line + 1) &&
-	hdr && mutt_parse_date (p, NULL) < time (NULL))
-      hdr->expired = 1;
+    if (!ascii_strcasecmp ("xpires", line + 1))
+    {
+      mutt_str_replace(&e->expires, p);
+      if (hdr)
+	hdr->expires = mutt_parse_date(p, NULL);
+    }
     break;
     
     case 'f':
diff -r c55918f5d06f pattern.c
--- a/pattern.c	Sun Aug 01 19:04:03 2010 -0400
+++ b/pattern.c	Fri Jan 22 15:47:40 2016 -0500
@@ -925,6 +925,10 @@
 	    return NULL;
 	  }
 	}
+	else if (tmp->op == M_EXPIRED)
+	{
+	  tmp->max = time(NULL);
+	}
 	implicit = 1;
 	break;
       case '(':
@@ -1104,7 +1108,7 @@
     case M_ALL:
       return (!pat->not);
     case M_EXPIRED:
-      return (pat->not ^ h->expired);
+      return (pat->not ^ (h->expires && h->expires < pat->max));
     case M_SUPERSEDED:
       return (pat->not ^ h->superseded);
     case M_FLAG:
diff -r c55918f5d06f protos.h
--- a/protos.h	Sun Aug 01 19:04:03 2010 -0400
+++ b/protos.h	Fri Jan 22 15:47:40 2016 -0500
@@ -183,6 +183,7 @@
 void mutt_display_address (ENVELOPE *);
 void mutt_display_sanitize (char *);
 void mutt_edit_content_type (HEADER *, BODY *, FILE *);
+void mutt_edit_expires (HEADER *);
 void mutt_edit_file (const char *, const char *);
 void mutt_edit_headers (const char *, const char *, HEADER *, char *, size_t);
 int mutt_filter_unprintable (char **);
diff -r c55918f5d06f sort.c
--- a/sort.c	Sun Aug 01 19:04:03 2010 -0400
+++ b/sort.c	Fri Jan 22 15:47:40 2016 -0500
@@ -33,6 +33,7 @@
 
 /* function to use as discriminator when normal sort method is equal */
 static sort_t *AuxSort = NULL;
+static time_t Now;
 
 #define AUXSORT(code,a,b) if (!code && AuxSort && !option(OPTAUXSORT)) { \
   set_option(OPTAUXSORT); \
@@ -219,6 +220,19 @@
   return (SORTCODE(result));
 }
 
+static int compare_expires (const void *a, const void *b)
+{
+  HEADER **pa = (HEADER **) a;
+  HEADER **pb = (HEADER **) b;
+  int result = 0;
+  if (!(*pa)->expires && !(*pb)->expires);
+  else if (!(*pa)->expires) result = 1;
+  else if (!(*pb)->expires) result = -1;
+  else result = (*pa)->expires - (*pb)->expires;
+  AUXSORT(result,a,b);
+  return (SORTCODE (result));
+}
+
 static int compare_status (const void *a, const void *b)
 {
   HEADER **pa = (HEADER **) a;
@@ -228,6 +242,7 @@
   if (!result) result = (*pb)->old - (*pa)->old;
   if (!result) result = (*pb)->read - (*pa)->read;
   if (!result) result = (*pa)->flagged - (*pb)->flagged;
+  if (!result) result = ((*pb)->expires && (*pb)->expires < Now) - ((*pa)->expires && (*pa)->expires < Now);
   if (!result) result = (*pb)->replied - (*pa)->replied;
   AUXSORT(result,a,b);
   return (SORTCODE(result));
@@ -255,6 +270,8 @@
       return (compare_score);
     case SORT_SPAM:
       return (compare_spam);
+    case SORT_EXPIRES:
+      return (compare_expires);
     case SORT_STATUS:
       return (compare_status);
     default:
@@ -305,6 +322,8 @@
   if (init && ctx->tree)
     mutt_clear_threads (ctx);
 
+  Now = time(NULL);
+
   if ((Sort & SORT_MASK) == SORT_THREADS)
   {
     AuxSort = NULL;
diff -r c55918f5d06f sort.h
--- a/sort.h	Sun Aug 01 19:04:03 2010 -0400
+++ b/sort.h	Fri Jan 22 15:47:40 2016 -0500
@@ -31,7 +31,8 @@
 #define SORT_KEYID	12
 #define SORT_TRUST	13
 #define SORT_SPAM	14
-#define SORT_STATUS	15
+#define SORT_EXPIRES	15
+#define SORT_STATUS	16
 /* dgc: Sort & SortAux are shorts, so I'm bumping these bitflags up from
  * bits 4 & 5 to bits 8 & 9 to make room for more sort keys in the future. */
 #define SORT_MASK	0xff
